openapi: 3.1.0
info:
  title: MotivBot API
  description: Complete motivational bot for task and conversation management with dynamic schema adaptation
  version: 2.2.0
  contact:
    name: MotivBot Team
    url: https://yampi.eu

servers:
  - url: https://task-inkor-motivbot.vercel.app/api/supabase
    description: MotivBot Production Server

paths:
  # TASK MANAGEMENT
  /rpc/motivbot_get_tasks:
    post:
      summary: Get tasks with filters
      description: Retrieve tasks with status, priority, and limit filters. Supports dynamic schema adaptation.
      operationId: motivbotGetTasks
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                p_status:
                  type: string
                  enum: [pending, in-progress, on-hold, completed, cancelled]
                  nullable: true
                  description: Filter by task status
                p_priority:
                  type: string
                  enum: [low, normal, medium, high]
                  nullable: true
                  description: Filter by task priority
                p_limit:
                  type: integer
                  default: 50
                  minimum: 1
                  maximum: 100
                  description: Maximum tasks to return
              example:
                p_status: "pending"
                p_priority: "high"
                p_limit: 20
      responses:
        '200':
          description: Tasks retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompleteTask'
        '400':
          description: Bad request
        '500':
          description: Server error
      tags:
        - Tasks

  /rpc/motivbot_create_task:
    post:
      summary: Create new task
      description: Create task with title (required) and optional description, priority, due date/time.
      operationId: motivbotCreateTask
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                p_title:
                  type: string
                  maxLength: 255
                  minLength: 1
                  description: Task title (required)
                  example: "Complete API documentation"
                p_description:
                  type: string
                  nullable: true
                  maxLength: 1000
                  description: Task description
                  example: "Write comprehensive API docs"
                p_priority:
                  type: string
                  enum: [low, normal, medium, high]
                  default: "normal"
                  description: Task priority
                  example: "high"
                p_due_date:
                  type: string
                  format: date
                  nullable: true
                  description: Due date (YYYY-MM-DD)
                  example: "2024-01-15"
                p_due_time:
                  type: string
                  format: time
                  nullable: true
                  description: Due time (HH:MM:SS)
                  example: "14:30:00"
              required:
                - p_title
              example:
                p_title: "Complete API documentation"
                p_description: "Write comprehensive API docs"
                p_priority: "high"
                p_due_date: "2024-01-15"
      responses:
        '200':
          description: Task created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateResponse'
        '400':
          description: Invalid input
        '500':
          description: Server error
      tags:
        - Tasks

  /rpc/motivbot_update_task:
    post:
      summary: Update existing task
      description: Update any field of an existing task. Only provided fields will be updated.
      operationId: motivbotUpdateTask
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                p_task_id:
                  type: integer
                  minimum: 1
                  description: Task ID to update
                  example: 1
                p_title:
                  type: string
                  nullable: true
                  maxLength: 255
                  description: New task title
                  example: "Updated task title"
                p_description:
                  type: string
                  nullable: true
                  maxLength: 1000
                  description: New task description
                  example: "Updated description"
                p_status:
                  type: string
                  enum: [pending, in-progress, on-hold, completed, cancelled]
                  nullable: true
                  description: New task status
                  example: "completed"
                p_priority:
                  type: string
                  enum: [low, normal, medium, high]
                  nullable: true
                  description: New task priority
                  example: "normal"
                p_due_date:
                  type: string
                  format: date
                  nullable: true
                  description: New due date
                  example: "2024-02-01"
                p_due_time:
                  type: string
                  format: time
                  nullable: true
                  description: New due time
                  example: "16:00:00"
              required:
                - p_task_id
              example:
                p_task_id: 1
                p_status: "completed"
      responses:
        '200':
          description: Task updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '404':
          description: Task not found
        '400':
          description: Invalid input
        '500':
          description: Server error
      tags:
        - Tasks

  /rpc/motivbot_delete_task:
    post:
      summary: Delete task
      description: Permanently delete a task and all associated conversations.
      operationId: motivbotDeleteTask
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                p_task_id:
                  type: integer
                  minimum: 1
                  description: Task ID to delete
                  example: 5
              required:
                - p_task_id
              example:
                p_task_id: 5
      responses:
        '200':
          description: Task deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '404':
          description: Task not found
        '500':
          description: Server error
      tags:
        - Tasks

  /rpc/motivbot_search_tasks:
    post:
      summary: Search tasks
      description: Search tasks by title/description with optional status and priority filters.
      operationId: motivbotSearchTasks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                p_search:
                  type: string
                  minLength: 1
                  maxLength: 255
                  description: Search term for title/description
                  example: "documentation"
                p_status:
                  type: string
                  enum: [pending, in-progress, on-hold, completed, cancelled]
                  nullable: true
                  description: Filter by status
                  example: "pending"
                p_priority:
                  type: string
                  enum: [low, normal, medium, high]
                  nullable: true
                  description: Filter by priority
                  example: "high"
              required:
                - p_search
              example:
                p_search: "API"
                p_status: "pending"
      responses:
        '200':
          description: Search completed successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompleteTask'
        '400':
          description: Invalid search parameters
        '500':
          description: Server error
      tags:
        - Tasks

  # CONVERSATION MANAGEMENT
  /rpc/motivbot_get_conversations:
    post:
      summary: Get conversations
      description: Retrieve conversations with task ID, role, and limit filters.
      operationId: motivbotGetConversations
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                p_task_id:
                  type: integer
                  nullable: true
                  minimum: 1
                  description: Filter by specific task
                  example: 1
                p_role:
                  type: string
                  enum: [user, assistant]
                  nullable: true
                  description: Filter by message role
                  example: "user"
                p_limit:
                  type: integer
                  default: 100
                  minimum: 1
                  maximum: 200
                  description: Maximum conversations to return
                  example: 50
              example:
                p_task_id: 1
                p_limit: 20
      responses:
        '200':
          description: Conversations retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompleteConversation'
        '400':
          description: Bad request
        '500':
          description: Server error
      tags:
        - Conversations

  /rpc/motivbot_create_conversation:
    post:
      summary: Create conversation
      description: Add new conversation message with role, content, and AI metadata tracking.
      operationId: motivbotCreateConversation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                p_task_id:
                  type: integer
                  minimum: 1
                  description: Task ID
                  example: 1
                p_role:
                  type: string
                  enum: [user, assistant]
                  description: Message role
                  example: "user"
                p_message:
                  type: string
                  minLength: 1
                  maxLength: 5000
                  description: Message content
                  example: "I need help with this task"
                p_model_used:
                  type: string
                  default: "gpt-4"
                  description: AI model used
                  example: "gpt-4"
                p_tokens_used:
                  type: integer
                  default: 0
                  minimum: 0
                  description: Tokens consumed
                  example: 150
              required:
                - p_task_id
                - p_role
                - p_message
              example:
                p_task_id: 1
                p_role: "user"
                p_message: "I need help with this task"
      responses:
        '200':
          description: Conversation created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateResponse'
        '400':
          description: Invalid input
        '404':
          description: Task not found
        '500':
          description: Server error
      tags:
        - Conversations

  /rpc/motivbot_update_conversation_feedback:
    post:
      summary: Update feedback
      description: Add quality ratings and feedback to conversations for performance tracking.
      operationId: motivbotUpdateConversationFeedback
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                p_conversation_id:
                  type: integer
                  minimum: 1
                  description: Conversation ID to update
                  example: 15
                p_user_is_grateful:
                  type: boolean
                  nullable: true
                  description: User expressed gratitude
                  example: true
                p_user_is_useful:
                  type: boolean
                  nullable: true
                  description: User found response useful
                  example: true
                p_assistant_is_useful:
                  type: boolean
                  nullable: true
                  description: Assistant was helpful
                  example: true
                p_assistant_is_precise:
                  type: boolean
                  nullable: true
                  description: Assistant was precise
                  example: true
                p_assistant_is_grateful:
                  type: boolean
                  nullable: true
                  description: Assistant expressed gratitude
                  example: false
              required:
                - p_conversation_id
              example:
                p_conversation_id: 15
                p_user_is_grateful: true
                p_user_is_useful: true
      responses:
        '200':
          description: Feedback updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '404':
          description: Conversation not found
        '400':
          description: Invalid input
        '500':
          description: Server error
      tags:
        - Conversations

  /rpc/motivbot_delete_conversation:
    post:
      summary: Delete conversation
      description: Delete specific conversation message permanently.
      operationId: motivbotDeleteConversation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                p_conversation_id:
                  type: integer
                  minimum: 1
                  description: Conversation ID to delete
                  example: 23
              required:
                - p_conversation_id
              example:
                p_conversation_id: 23
      responses:
        '200':
          description: Conversation deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '404':
          description: Conversation not found
        '500':
          description: Server error
      tags:
        - Conversations

  # ANALYTICS
  /rpc/motivbot_get_dashboard:
    post:
      summary: Get dashboard analytics
      description: Comprehensive system statistics including task metrics, conversation data, completion rates, and user engagement.
      operationId: motivbotGetDashboard
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties: {}
              example: {}
      responses:
        '200':
          description: Dashboard retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompleteDashboard'
        '500':
          description: Server error
      tags:
        - Analytics

components:
  schemas:
    CompleteTask:
      type: object
      properties:
        id:
          type: integer
          description: Task ID
          example: 1
        title:
          type: string
          description: Task title
          example: "Complete MotivBot project"
        description:
          type: string
          nullable: true
          description: Task description
          example: "Finish GPT Actions integration"
        status:
          type: string
          enum: [pending, in-progress, on-hold, completed, cancelled]
          description: Task status
          example: "in-progress"
        priority:
          type: string
          enum: [low, normal, medium, high]
          description: Task priority
          example: "high"
        due_date:
          type: string
          format: date
          nullable: true
          description: Due date
          example: "2024-01-15"
        due_time:
          type: string
          format: time
          nullable: true
          description: Due time
          example: "14:30:00"
        created_at:
          type: string
          format: date-time
          nullable: true
          description: Creation timestamp
          example: "2024-01-01T10:00:00Z"
        updated_at:
          type: string
          format: date-time
          nullable: true
          description: Last update timestamp
          example: "2024-01-01T12:00:00Z"

    CompleteConversation:
      type: object
      properties:
        id:
          type: integer
          description: Conversation ID
          example: 1
        task_id:
          type: integer
          description: Related task ID
          example: 1
        role:
          type: string
          enum: [user, assistant]
          description: Message role
          example: "assistant"
        message:
          type: string
          description: Message content
          example: "Hello! I'm MotivBot. How can I help you today?"
        user_is_grateful:
          type: boolean
          nullable: true
          description: User expressed gratitude
          example: true
        user_is_useful:
          type: boolean
          nullable: true
          description: User found response useful
          example: true
        assistant_is_useful:
          type: boolean
          nullable: true
          description: Assistant was helpful
          example: true
        assistant_is_precise:
          type: boolean
          nullable: true
          description: Assistant was precise
          example: true
        assistant_is_grateful:
          type: boolean
          nullable: true
          description: Assistant expressed gratitude
          example: false
        tokens_used:
          type: integer
          description: Tokens consumed
          example: 150
        model_used:
          type: string
          description: AI model used
          example: "gpt-4"
        response_time_ms:
          type: integer
          nullable: true
          description: Response time in milliseconds
          example: 2500
        created_at:
          type: string
          format: date-time
          nullable: true
          description: Message timestamp
          example: "2024-01-01T10:30:00Z"

    CompleteDashboard:
      type: object
      properties:
        tasks:
          type: object
          properties:
            total:
              type: integer
              description: Total tasks
              example: 45
            pending:
              type: integer
              description: Pending tasks
              example: 12
            in_progress:
              type: integer
              description: In-progress tasks
              example: 8
            on_hold:
              type: integer
              description: On-hold tasks
              example: 3
            completed:
              type: integer
              description: Completed tasks
              example: 20
            cancelled:
              type: integer
              description: Cancelled tasks
              example: 2
            high_priority:
              type: integer
              description: High priority tasks
              example: 7
            overdue:
              type: integer
              description: Overdue tasks
              example: 4
        conversations:
          type: object
          properties:
            total:
              type: integer
              description: Total conversations
              example: 234
            user_messages:
              type: integer
              description: Messages from users
              example: 117
            assistant_messages:
              type: integer
              description: Messages from assistant
              example: 117
            total_tokens:
              type: integer
              description: Total tokens used
              example: 34500
            grateful_responses:
              type: integer
              description: Grateful user responses
              example: 89
        completion_rate:
          type: number
          format: float
          description: Task completion percentage
          example: 44.44
        active_tasks:
          type: integer
          description: Active tasks count
          example: 23

    CreateResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Operation success
          example: true
        id:
          type: integer
          description: Created item ID
          example: 42
        message:
          type: string
          description: Success message
          example: "Task created successfully"
      required:
        - success
        - id
        - message

    SuccessResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Operation success
          example: true
        message:
          type: string
          description: Response message
          example: "Task updated successfully"
      required:
        - success
        - message

tags:
  - name: Tasks
    description: Complete task management with CRUD operations
  - name: Conversations
    description: Full conversation handling with feedback system
  - name: Analytics
    description: System analytics and search capabilities
